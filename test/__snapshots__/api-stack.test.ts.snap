// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ApiStack snapshot 1`] = `
Object {
  "Outputs": Object {
    "ApiApiGatewayEndpoint9EEF8DFF": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "ApiApiGateway8FA53210",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "ApiApiGatewayDeploymentStageprodCEA0AB12",
            },
            "/",
          ],
        ],
      },
    },
    "ApiEndpoint": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "ApiApiGateway8FA53210",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "ApiApiGatewayDeploymentStageprodCEA0AB12",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ApiApiGateway8FA53210": Object {
      "Properties": Object {
        "Name": "ApiGateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiApiGatewayANY54FC8F02": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ApiHitCounterFunctionD29566DA",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "ApiApiGateway8FA53210",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "ApiApiGateway8FA53210",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiApiGatewayANYApiPermissionApiApiGateway3CDC40D9ANY7C2C0DA3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiHitCounterFunctionD29566DA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApiApiGateway8FA53210",
              },
              "/",
              Object {
                "Ref": "ApiApiGatewayDeploymentStageprodCEA0AB12",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiApiGatewayANYApiPermissionTestApiApiGateway3CDC40D9ANY00D4815F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiHitCounterFunctionD29566DA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApiApiGateway8FA53210",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiApiGatewayAccount903E1D79": Object {
      "DeletionPolicy": "Retain",
      "DependsOn": Array [
        "ApiApiGateway8FA53210",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "ApiApiGatewayCloudWatchRoleB185ED22",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiApiGatewayCloudWatchRoleB185ED22": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiApiGatewayDeploymentD1AFDABA2873eaafb691429fd685837897e3fec2": Object {
      "DependsOn": Array [
        "ApiApiGatewayproxyANYBC8B491D",
        "ApiApiGatewayproxy9A44C7DF",
        "ApiApiGatewayANY54FC8F02",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "ApiApiGateway8FA53210",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ApiApiGatewayDeploymentStageprodCEA0AB12": Object {
      "DependsOn": Array [
        "ApiApiGatewayAccount903E1D79",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "ApiApiGatewayDeploymentD1AFDABA2873eaafb691429fd685837897e3fec2",
        },
        "RestApiId": Object {
          "Ref": "ApiApiGateway8FA53210",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ApiApiGatewayproxy9A44C7DF": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "ApiApiGateway8FA53210",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "ApiApiGateway8FA53210",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiApiGatewayproxyANYApiPermissionApiApiGateway3CDC40D9ANYproxy6D42C824": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiHitCounterFunctionD29566DA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApiApiGateway8FA53210",
              },
              "/",
              Object {
                "Ref": "ApiApiGatewayDeploymentStageprodCEA0AB12",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiApiGatewayproxyANYApiPermissionTestApiApiGateway3CDC40D9ANYproxyF679F011": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiHitCounterFunctionD29566DA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApiApiGateway8FA53210",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiApiGatewayproxyANYBC8B491D": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ApiHitCounterFunctionD29566DA",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ApiApiGatewayproxy9A44C7DF",
        },
        "RestApiId": Object {
          "Ref": "ApiApiGateway8FA53210",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiCounterTableB35878EF": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "Path",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "Path",
            "KeyType": "HASH",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiHitCounterFunctionD29566DA": Object {
      "DependsOn": Array [
        "ApiHitCounterFunctionServiceRoleDefaultPolicy5B234BF6",
        "ApiHitCounterFunctionServiceRoleB2E3B293",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "2f9a33e801715ddba5199a214a3c95583ac923609e6a45b0bf896e34f85ab512.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "downstreamFunction": Object {
              "Ref": "HelloFunctionD909AE8C",
            },
            "tableName": Object {
              "Ref": "ApiCounterTableB35878EF",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ApiHitCounterFunctionServiceRoleB2E3B293",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiHitCounterFunctionServiceRoleB2E3B293": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiHitCounterFunctionServiceRoleDefaultPolicy5B234BF6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ApiCounterTableB35878EF",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "HelloFunctionD909AE8C",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "HelloFunctionD909AE8C",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiHitCounterFunctionServiceRoleDefaultPolicy5B234BF6",
        "Roles": Array [
          Object {
            "Ref": "ApiHitCounterFunctionServiceRoleB2E3B293",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "HelloFunctionD909AE8C": Object {
      "DependsOn": Array [
        "HelloFunctionServiceRole186F1BA8",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "b531685cd31e581aed03ace9733a728266d5ed8606f36364cf75c3afd6be7802.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "HelloFunctionServiceRole186F1BA8",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "HelloFunctionServiceRole186F1BA8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
